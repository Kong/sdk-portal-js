openapi: 3.0.3
info:
  title: Portal API
  version: 2.0.0
  description: Portal API
  contact:
    name: Kong
    url: https://cloud.konghq.com
paths:
  /api/v2/applications:
    get:
      summary: Get many applications
      description: This endpoint allows the developer to list applications
      operationId: get-many-applications
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/FilterByNameEquality'
        - $ref: '#/components/parameters/FilterByNameEqualityShort'
        - $ref: '#/components/parameters/FilterByNameContains'
      responses:
        '200':
          $ref: '#/components/responses/GetManyApplications'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
        - applications
      security:
        - portalAccessToken: []
    post:
      summary: Create Application
      description: This endpoint allows the developer to create an application
      operationId: create-application
      requestBody:
        $ref: '#/components/requestBodies/CreateApplication'
      responses:
        '201':
          $ref: '#/components/responses/ApplicationCreation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/Internal'
      tags:
        - applications
      security:
        - portalAccessToken: []
  /api/v2/applications/{applicationId}:
    get:
      summary: Get one Application
      description: This endpoint allows the developer to get an application
      operationId: get-one-application
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      responses:
        '200':
          $ref: '#/components/responses/GetApplication'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - applications
      security:
        - portalAccessToken: []
    delete:
      summary: Delete Application
      description: This endpoint allows the developer to delete an application they own
      operationId: delete-application
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      responses:
        '204':
          description: The application has been deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      tags:
        - applications
      security:
        - portalAccessToken: []
    put:
      summary: Update Application
      description: This endpoint allows the developer to update an application they own
      operationId: update-application
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        $ref: '#/components/requestBodies/UpdateApplication'
      responses:
        '200':
          $ref: '#/components/responses/ApplicationUpdate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/Internal'
      tags:
        - applications
      security:
        - portalAccessToken: []
  /api/v2/applications/{applicationId}/credentials:
    get:
      summary: Get Many credentials
      description: >-
        This endpoint allows the developer to list the credentials for an
        application they own
      operationId: get-many-credentials
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      responses:
        '200':
          $ref: '#/components/responses/GetCredentials'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/Internal'
      tags:
        - credentials
      security:
        - portalAccessToken: []
    post:
      summary: Post Credential
      description: >-
        This endpoint allows the developer to create a credential for an
        application they own
      operationId: create-credential
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        $ref: '#/components/requestBodies/CreateCredential'
      responses:
        '201':
          $ref: '#/components/responses/CredentialCreation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Internal'
      tags:
        - credentials
      security:
        - portalAccessToken: []
  /api/v2/applications/{applicationId}/credentials/{credentialId}:
    put:
      summary: Update Credential
      description: >-
        This endpoint allows the developer to update a credential for an
        application they own
      operationId: update-credential
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/CredentialId'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCredential'
      responses:
        '200':
          description: credential properly updated
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Internal'
      tags:
        - credentials
      security:
        - portalAccessToken: []
    delete:
      summary: Delete Credential
      description: >-
        This endpoint allows the developer to delete a credential for an
        application they own
      operationId: delete-credential
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/CredentialId'
      responses:
        '204':
          description: credential properly deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/Internal'
      tags:
        - credentials
      security:
        - portalAccessToken: []
  /api/v2/applications/{applicationId}/refresh-token:
    post:
      summary: refresh token
      description: >-
        This endpoint allows the developer to reset the client secret for an
        application they own
      operationId: refresh-application-token
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      responses:
        '201':
          $ref: '#/components/responses/RefreshToken'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Internal'
      tags:
        - credentials
      security:
        - portalAccessToken: []
  /api/v2/applications/{applicationId}/registrations:
    get:
      summary: Get application registrations
      description: This endpoint lists product registrations for an application
      operationId: get-many-application-registrations
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/FilterByIdEquality'
        - $ref: '#/components/parameters/FilterByIdEqualityShort'
        - $ref: '#/components/parameters/FilterByStatusEquality'
        - $ref: '#/components/parameters/FilterByStatusEqualityShort'
      responses:
        '200':
          $ref: '#/components/responses/GetManyRegistrations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - registrations
      security:
        - portalAccessToken: []
    post:
      summary: Register an application for a product
      description: This endpoint registers an application for a product
      operationId: create-application-registration
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        $ref: '#/components/requestBodies/CreateRegistration'
      responses:
        '201':
          $ref: '#/components/responses/CreateRegistration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
      tags:
        - registrations
      security:
        - portalAccessToken: []
  /api/v2/applications/{applicationId}/registrations/{registrationId}:
    get:
      summary: Get an application registration
      description: >-
        This endpoint retrieves the specified product registration for an
        application
      operationId: get-one-application-registration
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/RegistrationId'
      responses:
        '200':
          $ref: '#/components/responses/GetRegistration'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - registrations
      security:
        - portalAccessToken: []
    delete:
      summary: Delete an application registration
      description: This endpoint unregister an application for a product version
      operationId: delete-application-registration
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/RegistrationId'
      responses:
        '204':
          description: The registration has been deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - registrations
      security:
        - portalAccessToken: []
  /api/v2/authenticate:
    post:
      summary: Authenticate
      description: >-
        This endpoint allows a developer to authenticate to their portal using a
        username and password.
      operationId: authenticate
      requestBody:
        $ref: '#/components/requestBodies/AuthenticateRequest'
      responses:
        '204':
          description: No Content
          headers:
            Set-Cookie:
              schema:
                type: string
                example: >
                  portalaccesstoken=access12345; Path=/;
                  Domain=example.us.portal.konghq.tech; Expires=Thu, 20 Jul 2023
                  12:00:00 GMT; HttpOnly; Secure; SameSite=None

                  portalrefreshtoken=refresh12345; Path=/v2/refresh;
                  Domain=example.us.portal.konghq.tech; Expires=Thu, 20 Jul 2023
                  12:00:00 GMT; HttpOnly; Secure; SameSite=None
              description: The access and refresh tokens.
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - authentication
  /api/v2/authenticate/{ssoLoginPath}:
    get:
      summary: Authenticate SSO
      description: >-
        This endpoint allows a developer to authenticate to their portal using
        an external IdP.
      operationId: authenticate-sso
      parameters:
        - $ref: '#/components/parameters/ssoLoginPath'
      responses:
        '302':
          description: Found
        '400':
          $ref: '#/components/responses/BadRequest'
      tags:
        - authentication
  /api/v2/developer:
    post:
      operationId: register
      summary: Register
      description: Register to the developer portal
      requestBody:
        description: Developer registration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPayload'
      responses:
        '201':
          description: the developer has been properly registered.
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/Internal'
      tags:
        - developer
      security:
        - {}
  /api/v2/developer/forgot-password:
    post:
      operationId: forgot-password
      summary: Forgot Password
      description: |
        Starts the password reset flow for the desired account. An email
        will be sent to the email address to initiate the password reset flow.
      requestBody:
        description: Developer registration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordPayload'
      responses:
        '200':
          description: the password reset flow has been initiated.
        '400':
          $ref: '#/components/responses/BadRequest'
      tags:
        - developer
      security:
        - {}
  /api/v2/developer/me:
    get:
      summary: Retrieve My Account
      tags:
        - developer
      responses:
        '200':
          $ref: '#/components/responses/MeResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/Internal'
      operationId: get-developer-me
      description: Returns info about the current developer.
      security:
        - portalAccessToken: []
  /api/v2/logout:
    post:
      summary: Logout
      description: >-
        This endpoint allows a developer to logout of the portal. This operation
        revokes all active tokens and clears the portal cookies.
      operationId: logout
      responses:
        '204':
          description: No Content
      tags:
        - authentication
  /api/v2/portal:
    get:
      operationId: get-portal-context
      summary: get portal context
      description: return the portal context
      responses:
        '200':
          $ref: '#/components/responses/RetrievePortalContextResponse'
      tags:
        - portal
      security:
        - {}
  /api/v2/portal/appearance:
    get:
      operationId: get-portal-appearance
      summary: portal appearance
      description: appearance of the portal
      responses:
        '200':
          $ref: '#/components/responses/RetrievePortalAppearanceResponse'
      tags:
        - portal
      security:
        - {}
  /api/v2/portal/catalog-cover:
    get:
      operationId: get-portal-catalog-cover
      summary: catalog cover
      description: Cover banner for the developer portal
      responses:
        '200':
          $ref: '#/components/responses/RetrievePortalCoverResponse'
      tags:
        - portal
      security:
        - {}
  /api/v2/portal/logo:
    get:
      operationId: get-portal-logo
      summary: portal logo
      description: Logo of the developer portal
      responses:
        '200':
          $ref: '#/components/responses/RetrievePortalLogoResponse'
      tags:
        - portal
      security:
        - {}
  /api/v2/products:
    get:
      summary: Get page of products
      description: Returns a paginated list of published API Products
      operationId: get-many-products
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/FilterByNameEquality'
        - $ref: '#/components/parameters/FilterByNameEqualityShort'
        - $ref: '#/components/parameters/FilterByNameContains'
        - $ref: '#/components/parameters/FilterByDescriptionEquality'
        - $ref: '#/components/parameters/FilterByDescriptionEqualityShort'
        - $ref: '#/components/parameters/FilterByDescriptionContains'
        - $ref: '#/components/parameters/FilterByIdEquality'
        - $ref: '#/components/parameters/FilterByIdEqualityShort'
      responses:
        '200':
          $ref: '#/components/responses/ProductGetMany'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
        - products
      security:
        - portalAccessToken: []
        - {}
  /api/v2/products/{productId}:
    get:
      summary: Get a product
      description: Returns the given published product, with its versions attached
      operationId: get-product
      parameters:
        - $ref: '#/components/parameters/ProductId'
      responses:
        '200':
          $ref: '#/components/responses/ProductGet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - products
      security:
        - portalAccessToken: []
        - {}
  /api/v2/products/{productId}/documents:
    get:
      summary: Get product documentation
      description: Return the documentation tree of a product
      operationId: get-product-documents
      parameters:
        - $ref: '#/components/parameters/ProductId'
        - in: header
          name: Accept
          schema:
            $ref: '#/components/schemas/DocumentContentTypeEnum'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      responses:
        '200':
          description: Tree of documents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyDocuments'
            application/konnect.document-tree+json:
              schema:
                $ref: '#/components/schemas/GetManyDocumentTrees'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - documentation
      security:
        - portalAccessToken: []
        - {}
  /api/v2/products/{productId}/documents/{documentId}:
    get:
      summary: Get one product document
      description: Returns the specified document from the product's document tree
      operationId: get-product-document
      parameters:
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/DocumentId'
      responses:
        '200':
          $ref: '#/components/responses/ProductDocumentGet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - documentation
      security:
        - portalAccessToken: []
        - {}
  /api/v2/products/{productId}/versions:
    get:
      summary: Get page of product versions
      description: Returns paginated list of versions of a given product
      operationId: get-many-product-versions
      parameters:
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/FilterByVersionEquality'
        - $ref: '#/components/parameters/FilterByVersionEqualityShort'
        - $ref: '#/components/parameters/FilterByVersionContains'
      responses:
        '200':
          $ref: '#/components/responses/ProductGetManyVersions'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - versions
      security:
        - portalAccessToken: []
        - {}
  /api/v2/products/{productId}/versions/{versionId}:
    get:
      summary: Get product version
      description: Return given product version
      operationId: get-product-version
      parameters:
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductVersionId'
      responses:
        '200':
          $ref: '#/components/responses/ProductVersionGet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - versions
      security:
        - portalAccessToken: []
        - {}
  /api/v2/products/{productId}/versions/{versionId}/spec:
    get:
      summary: Get OpenAPI spec for product version
      description: >-
        Returns the OpenAPI specification document attached to given product
        version
      operationId: get-product-version-spec
      parameters:
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductVersionId'
      responses:
        '200':
          $ref: '#/components/responses/ProductVersionSpecGet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - versions
      security:
        - portalAccessToken: []
        - {}
  /api/v2/products/{productId}/versions/{versionId}/spec/operations:
    get:
      summary: Get operations in version spec
      description: >-
        Returns list of operations used in the OpenAPI specefication document
        attached to given product version
      operationId: get-product-version-spec-operations
      parameters:
        - $ref: '#/components/parameters/ProductId'
        - $ref: '#/components/parameters/ProductVersionId'
      responses:
        '200':
          $ref: '#/components/responses/ProductVersionSpecOperationsGet'
        '204':
          description: >-
            Response when there are no operations to send because no spec is
            defined for the version
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - versions
      security:
        - portalAccessToken: []
        - {}
  /api/v2/refresh:
    post:
      summary: Refresh Access Token
      description: This endpoint allows a developer to refresh their existing access token.
      operationId: refresh
      responses:
        '204':
          description: No Content
          headers:
            Set-Cookie:
              schema:
                type: string
                example: >
                  portalaccesstoken=access12345; Path=/;
                  Domain=example.us.portal.konghq.tech; Expires=Thu, 20 Jul 2023
                  12:00:00 GMT; HttpOnly; Secure; SameSite=None

                  portalrefreshtoken=refresh12345; Path=/v2/refresh;
                  Domain=example.us.portal.konghq.tech; Expires=Thu, 20 Jul 2023
                  12:00:00 GMT; HttpOnly; Secure; SameSite=None
        '401':
          $ref: '#/components/responses/Unauthorized'
      tags:
        - authentication
  /api/v2/reset-password:
    post:
      summary: Reset Password
      description: >-
        This endpoint allows a developer to reset their password, using a reset
        token.
      operationId: reset-password
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      tags:
        - authentication
      requestBody:
        $ref: '#/components/requestBodies/ResetPasswordRequest'
    parameters: []
  /api/v2/search/{indices}:
    get:
      summary: Search Portal Entities
      operationId: search-portal-entities
      description: >-
        Returns paginated search results from the specified entities with the
        given search parameters.
      responses:
        '200':
          $ref: '#/components/responses/SearchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
        - $ref: '#/components/parameters/SearchIndices'
        - $ref: '#/components/parameters/SearchQuery'
        - $ref: '#/components/parameters/SearchJoin'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      tags:
        - search
      security:
        - portalAccessToken: []
        - {}
  /api/v2/verify-email:
    post:
      summary: Verify Email
      description: This endpoint allows a new developer to verify their email.
      operationId: verify-email
      responses:
        '202':
          $ref: '#/components/responses/VerifyEmailResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      tags:
        - authentication
      requestBody:
        $ref: '#/components/requestBodies/VerifyEmailRequest'
    parameters: []
components:
  securitySchemes:
    portalAccessToken:
      type: apiKey
      in: cookie
      name: portalaccesstoken
      description: >
        The Developer portal cookie is meant to be used by the Developer API to
        authenticate with.
  parameters:
    ApplicationId:
      name: applicationId
      in: path
      required: true
      description: Id of the targeted application
      schema:
        type: string
        format: uuid
    CredentialId:
      name: credentialId
      in: path
      required: true
      description: Id of the targeted credential
      schema:
        type: string
        format: uuid
    PageSize:
      name: page[size]
      description: Determines the size of the page to retrieve.
      required: false
      in: query
      allowEmptyValue: true
      schema:
        type: integer
        example: 2
    PageNumber:
      name: page[number]
      description: Determines which page of the entities to retrieve.
      required: false
      in: query
      allowEmptyValue: true
      schema:
        type: integer
        example: 10
    FilterByNameEquality:
      name: filter[name][eq]
      description: >-
        Filter by direct equality comparison of the name property with a
        supplied value.
      in: query
      required: false
      schema:
        type: string
        example: good service
    FilterByNameEqualityShort:
      name: filter[name]
      description: >-
        Filter by direct equality comparison (short-hand) of the name property
        with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: good service
    FilterByNameContains:
      name: filter[name][contains]
      description: >-
        Filter by contains comparison of the name property with a supplied
        substring
      in: query
      required: false
      schema:
        type: string
        example: good service
    ssoLoginPath:
      name: ssoLoginPath
      in: path
      required: true
      schema:
        type: string
        example: mycompany
      description: The login path unique to the portal for SSO.
    ProductId:
      name: productId
      in: path
      required: true
      description: Id of the product
      schema:
        type: string
        format: uuid
    ProductVersionId:
      name: versionId
      in: path
      required: true
      description: Id of the product version
      schema:
        type: string
        format: uuid
    DocumentId:
      name: documentId
      in: path
      required: true
      description: Id of the document
      schema:
        type: string
        format: uuid
    FilterByDescriptionEquality:
      name: filter[description][eq]
      description: >-
        Filter by direct equality comparison of the description property with a
        supplied value.
      in: query
      required: false
      schema:
        type: string
        example: portal
    FilterByDescriptionEqualityShort:
      name: filter[description]
      description: >-
        Filter by direct equality comparison (short-hand) of the description
        property with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: portal
    FilterByDescriptionContains:
      name: filter[description][contains]
      description: >-
        Filter by contains comparison of the description property with a
        supplied substring
      in: query
      required: false
      schema:
        type: string
        example: portal
    FilterByIdEquality:
      name: filter[id][eq]
      description: >-
        Filter by direct equality comparison of the id property with a supplied
        value.
      in: query
      required: false
      schema:
        type: string
        example: 5be86298-147b-45ab-bfaf-a1bff97dce39
    FilterByIdEqualityShort:
      name: filter[id]
      description: >-
        Filter by direct equality comparison (short-hand) of the id property
        with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: 5be86298-147b-45ab-bfaf-a1bff97dce39
    FilterByVersionEquality:
      name: filter[version][eq]
      description: >-
        Filter by direct equality comparison of the version property with a
        supplied value.
      in: query
      required: false
      schema:
        type: string
        example: v2
    FilterByVersionEqualityShort:
      name: filter[version]
      description: >-
        Filter by direct equality comparison (short-hand) of the version
        property with a supplied value.
      in: query
      required: false
      schema:
        type: string
        example: v2
    FilterByVersionContains:
      name: filter[version][contains]
      description: >-
        Filter by contains comparison of the version property with a supplied
        substring
      in: query
      required: false
      schema:
        type: string
        example: '2'
    RegistrationId:
      name: registrationId
      in: path
      required: true
      description: Id of the targeted registration
      schema:
        type: string
        format: uuid
    FilterByStatusEquality:
      name: filter[status][eq]
      description: >-
        Filter by direct equality comparison of the status property with a
        supplied value.
      in: query
      required: false
      schema:
        type: string
        enum:
          - approved
          - pending
          - rejected
          - revoked
        example: approved
    FilterByStatusEqualityShort:
      name: filter[status]
      description: >-
        Filter by direct equality comparison (short-hand) of the status property
        with a supplied value.
      in: query
      required: false
      schema:
        type: string
        enum:
          - approved
          - pending
          - rejected
          - revoked
        example: approved
    SearchQuery:
      name: q
      description: Determines how to filter search results
      required: false
      in: query
      schema:
        $ref: '#/components/schemas/SearchQueryParameters'
    SearchJoin:
      name: join
      description: Determines which sub-entities to include in search results
      required: false
      in: query
      schema:
        $ref: '#/components/schemas/SearchJoinParameters'
    SearchIndices:
      name: indices
      description: Determines which entity sets to search
      required: true
      in: path
      schema:
        $ref: '#/components/schemas/SearchIndicesParameters'
  requestBodies:
    CreateApplication:
      description: Create an application
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateApplicationPayload'
    UpdateApplication:
      description: Update an application
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateApplicationPayload'
    CreateCredential:
      description: Create a credential
      required: false
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCredentialPayload'
    UpdateCredential:
      description: Update a credential
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCredentialPayload'
    AuthenticateRequest:
      description: The request schema for the authenticate endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticateRequest'
    ResetPasswordRequest:
      description: The request schema for the reset password endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResetPasswordRequest'
          examples:
            ResetPasswordRequest:
              $ref: '#/components/examples/Reset-Password-Request'
    VerifyEmailRequest:
      description: The request schema for the verify email endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VerifyEmailRequest'
          examples:
            VerifyEmailRequest:
              $ref: '#/components/examples/Verify-Email-Request'
    CreateRegistration:
      description: Create an application registration
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateRegistrationPayload'
  responses:
    GetManyApplications:
      description: Get applications response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetManyApplicationsResponse'
    GetApplication:
      description: Get application response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetApplicationResponse'
    RefreshToken:
      description: Refresh token response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefreshTokenResponse'
    GetCredentials:
      description: Get credentials response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCredentialsResponse'
    CredentialCreation:
      description: Credential Creation success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CredentialCreationResponse'
    ApplicationCreation:
      description: Application Creation success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationCreationResponse'
    ApplicationUpdate:
      description: Application Update success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationUpdateResponse'
    TooManyRequests:
      description: Too Many Requests
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
          examples:
            400-Invalid-Token:
              $ref: '#/components/examples/400-Invalid-Token'
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    Forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
          examples:
            404-Token-Not-Found:
              $ref: '#/components/examples/404-Token-Not-Found'
    Conflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    Internal:
      description: Internal
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/InternalError'
    Gone:
      description: Gone
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/GoneError'
          examples:
            410-Expired-Token:
              $ref: '#/components/examples/410-Expired-Token'
    VerifyEmailResponse:
      description: The response schema for the verify email endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VerifyEmailResponse'
          examples:
            VerifyEmailResponse:
              $ref: '#/components/examples/Verify-Email-Response'
    MeResponse:
      description: Response from me endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Developer'
    RetrievePortalLogoResponse:
      description: Logo of the portal. Can be either png or jpg
      content:
        image/png:
          schema:
            type: string
            format: binary
        image/jpg:
          schema:
            type: string
            format: binary
    RetrievePortalCoverResponse:
      description: Cover of the portal. Can be either png or jpg
      content:
        image/png:
          schema:
            type: string
            format: binary
        image/jpg:
          schema:
            type: string
            format: binary
    RetrievePortalAppearanceResponse:
      description: portal appearance
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalAppearance'
    RetrievePortalContextResponse:
      description: portal context
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalContext'
    ProductGet:
      description: Response for getting a product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
    ProductGetMany:
      description: Response for getting many products
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductListPage'
    ProductGetManyVersions:
      description: Response for getting a paginated list of versions of an API Product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductVersionListPage'
    ProductVersionGet:
      description: Response for getting a product version
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductVersion'
    ProductVersionSpecGet:
      description: Response for getting a product version spec document
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductVersionSpec'
    ProductVersionSpecOperationsGet:
      description: Response for getting product version spec operations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductVersionSpecOperations'
    ProductDocumentGet:
      description: Response for getting one of the product's documents
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductDocument'
    CreateRegistration:
      description: Registration creation response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRegistrationResponse'
    GetRegistration:
      description: Get registration response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRegistrationResponse'
    GetManyRegistrations:
      description: Get registrations response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetManyRegistrationsResponse'
    SearchResponse:
      description: Search Results
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchResults'
          examples:
            Search Response Example:
              $ref: '#/components/examples/SearchResponseExample'
  schemas:
    CreateCredentialPayload:
      additionalProperties: false
      type: object
      properties:
        display_name:
          type: string
          maxLength: 255
    UpdateCredentialPayload:
      additionalProperties: false
      type: object
      required:
        - display_name
      properties:
        display_name:
          type: string
          maxLength: 255
    GetManyApplicationsResponse:
      additionalProperties: false
      type: object
      required:
        - data
        - meta
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetApplicationResponse'
    GetApplicationResponse:
      additionalProperties: false
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        reference_id:
          type: string
        description:
          type: string
        redirect_uri:
          type: string
        created_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An ISO-8601 timestamp representation of application creation date.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: >-
            An ISO-8601 timestamp representation of application last updated at
            date.
          readOnly: true
      required:
        - id
        - name
        - reference_id
        - description
        - updated_at
        - created_at
    GetCredentialsResponse:
      additionalProperties: false
      type: object
      required:
        - data
        - meta
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              display_name:
                type: string
            required:
              - id
              - display_name
    CredentialCreationResponse:
      additionalProperties: false
      type: object
      properties:
        credential:
          type: string
        id:
          type: string
        display_name:
          type: string
      required:
        - credential
        - id
        - display_name
    RefreshTokenResponse:
      additionalProperties: false
      type: object
      title: Refresh token response
      description: Refresh token response
      required:
        - client_id
        - client_secret
      properties:
        client_id:
          type: string
        client_secret:
          type: string
    CreateApplicationPayload:
      additionalProperties: false
      type: object
      title: CreateApplicationPayload
      description: an application payload
      required:
        - name
      properties:
        name:
          description: The name of the application
          type: string
          maxLength: 255
        reference_id:
          description: >-
            An identifier to correlate the application with an external system.
            Cannot be set when using Dynamic Client Registration.
          type: string
          maxLength: 255
        redirect_uri:
          description: URL to redirect to after completing an OIDC auth flow
          type: string
          format: uri
        description:
          description: A brief description of the application
          type: string
          maxLength: 255
    ApplicationCreationResponse:
      additionalProperties: false
      type: object
      title: ApplicationCreationResponse
      description: Application creation response payload
      required:
        - id
        - name
        - reference_id
        - description
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        reference_id:
          type: string
        description:
          type: string
        redirect_uri:
          type: string
        credentials:
          type: object
          required:
            - client_id
            - client_secret
          properties:
            client_id:
              type: string
            client_secret:
              type: string
        created_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An ISO-8601 timestamp representation of application creation date.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: >-
            An ISO-8601 timestamp representation of application last updated at
            date.
          readOnly: true
    UpdateApplicationPayload:
      additionalProperties: false
      type: object
      title: UpdateApplicationPayload
      description: Payload required to update an application
      properties:
        name:
          type: string
        reference_id:
          type: string
        description:
          type: string
        redirect_uri:
          type: string
    ApplicationUpdateResponse:
      additionalProperties: false
      type: object
      title: ApplicationUpdateResponse
      description: Application update response payload
      required:
        - id
        - name
        - reference_id
        - description
        - updated_at
        - created_at
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        reference_id:
          type: string
        description:
          type: string
        redirect_uri:
          type: string
        created_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An ISO-8601 timestamp representation of application creation date.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: >-
            An ISO-8601 timestamp representation of application last updated at
            date.
          readOnly: true
    Error:
      type: object
      title: Error
      description: standard error
      example:
        status: 404
        title: Not Found
        type: https://kongapi.info/konnect/not-found
        instance: portal:trace:2287285207635123011
        detail: The requested document was not found
      required:
        - status
        - title
        - instance
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 404
        title:
          type: string
          description: The error response code.
          example: Not Found
        type:
          type: string
          description: The error type.
          example: Not Found
        instance:
          type: string
          example: portal:trace:2287285207635123011
          description: The portal traceback code
        invalid_parameters:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: The name of the invalid parameter.
              reason:
                type: string
                description: The reason the parameter is invalid.
              field:
                type: string
                description: The field that caused the error.
                example: name
              rule:
                type: string
                description: The rule that caused the error.
                example: required
          description: An array of invalid parameters.
        detail:
          type: string
          example: The requested team was not found
          description: Details about the error.
    PageMeta:
      type: object
      description: >-
        Contains pagination query parameters and the total number of objects
        returned.
      required:
        - number
        - size
        - total
      properties:
        number:
          type: number
          example: 2
        size:
          type: number
          example: 10
        total:
          type: number
          example: 100
    PaginatedMeta:
      type: object
      title: PaginatedMeta
      description: returns the pagination information
      properties:
        page:
          $ref: '#/components/schemas/PageMeta'
      required:
        - page
    BaseError:
      type: object
      title: Error
      description: standard error
      required:
        - status
        - title
        - instance
        - detail
      properties:
        status:
          type: integer
          description: >
            The HTTP status code of the error. Useful when passing the response

            body to child properties in a frontend UI. Must be returned as an
            integer.
          readOnly: true
        title:
          type: string
          description: |
            A short, human-readable summary of the problem. It should not
            change between occurences of a problem, except for localization.
            Should be provided as "Sentence case" for direct use in the UI.
          readOnly: true
        type:
          type: string
          description: The error type.
          readOnly: true
        instance:
          type: string
          description: |
            Used to return the correlation ID back to the user, in the format
            kong:trace:<correlation_id>. This helps us find the relevant logs
            when a customer reports an issue.
          readOnly: true
        detail:
          type: string
          description: >
            A human readable explanation specific to this occurence of the
            problem.

            This field may contain request/entity data to help the user
            understand

            what went wrong. Enclose variable values in square brackets. Should
            be

            provided as "Sentence case" for direct use in the UI.
          readOnly: true
    InvalidRules:
      description: invalid parameters rules
      type: string
      readOnly: true
      nullable: true
      enum:
        - required
        - enum
        - min_length
        - max_length
        - min_digits
        - min_lowercase
        - min_uppercase
        - min_symbols
    InvalidParameterItem:
      type: object
      properties:
        field:
          type: string
          example: name
          readOnly: true
        rule:
          $ref: '#/components/schemas/InvalidRules'
        reason:
          type: string
          example: is a required field
          readOnly: true
        choices:
          type: array
          uniqueItems: true
          nullable: true
          items: {}
          readOnly: true
      required:
        - field
        - reason
    InvalidParameters:
      type: array
      nullable: false
      uniqueItems: true
      minItems: 1
      description: invalid parameters
      items:
        $ref: '#/components/schemas/InvalidParameterItem'
    BadRequestError:
      type: object
      required:
        - invalid_parameters
      properties:
        status:
          example: 400
        title:
          example: Bad Request
        type:
          example: https://httpstatuses.com/400
        instance:
          example: kong:trace:1234567890
        detail:
          example: Invalid request body
        invalid_parameters:
          $ref: '#/components/schemas/InvalidParameters'
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - $ref: '#/components/schemas/BaseError'
        - $ref: '#/components/schemas/BaseError'
        - $ref: '#/components/schemas/BaseError'
        - $ref: '#/components/schemas/BaseError'
        - $ref: '#/components/schemas/BaseError'
    UnauthorizedError:
      type: object
      properties:
        status:
          example: 401
        title:
          example: Unauthorized
        type:
          example: https://httpstatuses.com/401
        instance:
          example: kong:trace:1234567890
        detail:
          example: Invalid credentials
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - $ref: '#/components/schemas/BaseError'
        - $ref: '#/components/schemas/BaseError'
        - $ref: '#/components/schemas/BaseError'
        - $ref: '#/components/schemas/BaseError'
        - $ref: '#/components/schemas/BaseError'
    ForbiddenError:
      type: object
      properties:
        status:
          example: 403
        title:
          example: Forbidden
        type:
          example: https://httpstatuses.com/403
        instance:
          example: kong:trace:1234567890
        detail:
          example: Forbidden
      allOf:
        - $ref: '#/components/schemas/BaseError'
    NotFoundError:
      type: object
      properties:
        status:
          example: 404
        title:
          example: Not Found
        type:
          example: https://httpstatuses.com/404
        instance:
          example: kong:trace:1234567890
        detail:
          example: Not found
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - $ref: '#/components/schemas/BaseError'
        - $ref: '#/components/schemas/BaseError'
        - $ref: '#/components/schemas/BaseError'
    ConflictError:
      type: object
      properties:
        status:
          example: 409
        title:
          example: Conflict
        type:
          example: https://httpstatuses.com/409
        instance:
          example: kong:trace:1234567890
        detail:
          example: Conflict
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - $ref: '#/components/schemas/BaseError'
    InternalError:
      allOf:
        - $ref: '#/components/schemas/BaseError'
        - $ref: '#/components/schemas/BaseError'
    AuthenticateRequest:
      type: object
      additionalProperties: false
      example:
        username: developer@example.com
        password: <!N0taP@$$w0rd!>
      title: AuthenticateRequest
      description: The request schema for the authenticate endpoint.
      properties:
        username:
          type: string
          format: email
          example: developer@example.com
          writeOnly: true
        password:
          type: string
          format: password
          example: <!N0taP@$$w0rd!>
          writeOnly: true
      required:
        - username
        - password
    ResetPasswordRequest:
      title: ResetPasswordRequest
      type: object
      additionalProperties: false
      description: The request schema for the reset password endpoint.
      example:
        password: <!D3finitelyN0taP@$$w0rd!>
        token: c8efd006-d8e1-4743-b91b-f163b9eae06a
      properties:
        password:
          type: string
          format: password
          example: <!N0taP@$$w0rd!>
          writeOnly: true
        token:
          type: string
          format: uuid
          example: c8efd006-d8e1-4743-b91b-f163b9eae06a
          writeOnly: true
      required:
        - password
        - token
    VerifyEmailRequest:
      title: VerifyEmailRequest
      type: object
      additionalProperties: false
      description: The request schema for the verify email endpoint.
      example:
        token: c8efd006-d8e1-4743-b91b-f163b9eae06a
      properties:
        token:
          type: string
          format: uuid
          example: c8efd006-d8e1-4743-b91b-f163b9eae06a
          writeOnly: true
      required:
        - token
    VerifyEmailResponse:
      title: VerifyEmailResponse
      type: object
      additionalProperties: false
      description: The response schema for the verify email endpoint.
      example:
        email: developer@example.com
        token: c8efd006-d8e1-4743-b91b-f163b9eae06a
      properties:
        email:
          type: string
          format: email
          example: developer@example.com
          readOnly: true
        token:
          type: string
          format: uuid
          example: c8efd006-d8e1-4743-b91b-f163b9eae06a
          readOnly: true
    GoneError:
      type: object
      properties:
        status:
          example: 410
        title:
          example: Gone
        type:
          example: https://httpstatuses.com/410
        instance:
          example: kong:trace:1234567890
        detail:
          example: Gone
      allOf:
        - $ref: '#/components/schemas/BaseError'
    Developer:
      title: Developer
      type: object
      description: A developer is an individual who can use a developer portal.
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
          example: 7f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          readOnly: true
        email:
          type: string
          format: email
          example: developer@email.com
          maxLength: 250
        full_name:
          type: string
          pattern: ^[\w \W]+$
          example: API Developer
          maxLength: 250
        created_at:
          type: string
          format: date-time
          example: '2022-02-07T17:46:57.52Z'
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-10-08T17:00:00.52Z'
          readOnly: true
      required:
        - full_name
        - email
    RegisterPayload:
      title: register payload
      description: |
        Payload required to be sent to register a developer to the
        portal.
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
          format: email
          example: developer@konghq.com
        full_name:
          type: string
          minLength: 1
          maxLength: 256
          example: Jane Doe
      required:
        - full_name
        - email
    ResetPasswordPayload:
      title: reset password payload
      description: |
        Payload required to start the reset password flow
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
          format: email
          example: developer@konghq.com
      required:
        - email
    PortalAppearance:
      title: Portal Appearance
      description: the portal appearance
      type: object
      additionalProperties: false
      properties:
        variables:
          type: object
          properties:
            catalog:
              type: object
              properties:
                logo:
                  type: object
                  properties:
                    url:
                      type: string
                cover:
                  type: object
                  properties:
                    url:
                      type: string
                primary_header:
                  type: object
                  properties:
                    text:
                      type: string
                welcome_message:
                  type: object
                  properties:
                    text:
                      type: string
        stylesheets:
          type: object
          properties:
            global:
              type: object
              properties:
                main:
                  type: object
                  properties:
                    data:
                      type: object
    PortalContext:
      title: Portal Context
      description: describe the portal execution context
      type: object
      additionalProperties: false
      properties:
        portal_id:
          type: string
        org_id:
          type: string
        featureset_id:
          type: string
        basic_auth_enabled:
          type: boolean
          description: Whether the portal can be accessed via email and password
        oidc_auth_enabled:
          type: boolean
          description: >-
            Whether the portal can be accessed via authentication with Single
            Sign On (SSO) through OpenID Connect (OIDC) from a third-party
            Identity Provider
        is_public:
          type: boolean
          description: >-
            Whether the portal catalog can be accessed by non-authenticated
            users
        rbac_enabled:
          type: boolean
          description: Whether the portal is protected with Role-Based Access Control
        dcr_provider_ids:
          type: array
          description: >-
            The unique identifiers of each available client provider when using
            Dynamic Client Registration
          items:
            type: string
            format: uuid
      required:
        - portal_id
        - org_id
        - is_public
        - featureset_id
        - basic_auth_enabled
        - oidc_auth_enabled
        - rbac_enabled
        - dcr_provider_ids
    Product:
      title: Product
      type: object
      additionalProperties: false
      required:
        - id
        - created_at
        - updated_at
        - name
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An ISO-8604 timestamp representation of product creation date.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An ISO-8604 timestamp representation of product update date.
          readOnly: true
        name:
          type: string
          example: Billing
          description: name of service
        description:
          type: string
          example: Api for billing functions
        labels:
          type: object
    ProductListPage:
      title: ProductListPage
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    ProductVersion:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: >-
            An ISO-8604 timestamp representation of product version creation
            date.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An ISO-8604 timestamp representation of product version update date.
          readOnly: true
        version:
          type: string
          example: v2.0.0
          description: Name of product version
        is_deprecated:
          type: boolean
          description: If true, product version is deprecated
        registration_configs:
          description: >-
            Configurations for how the product version is able to be registered
            for by applications
          type: array
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                enum:
                  - key-auth
                  - openid-connect
      required:
        - id
        - created_at
        - updated_at
        - version
        - is_deprecated
        - registration_configs
    ProductVersionListPage:
      title: ProductVersionListPage
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProductVersion'
    ProductVersionSpec:
      type: object
      title: Product Version Spec Document
      description: API specification
      properties:
        api_type:
          $ref: '#/components/schemas/ApiTypeEnum'
        content:
          type: string
      required:
        - api_type
        - content
    ProductVersionSpecOperations:
      type: object
      title: Operations in product version spec document
      description: List of every operation detailed in the product version spec document
      required:
        - api_type
        - operations
      properties:
        api_type:
          $ref: '#/components/schemas/ApiTypeEnum'
        operations:
          type: array
          items:
            type: object
            required:
              - path
              - method
              - operation_id
              - tags
              - summary
              - deprecated
            properties:
              path:
                type: string
                example: /pet
              method:
                type: string
                enum:
                  - get
                  - patch
                  - post
                  - put
                  - delete
                  - options
                  - connect
                  - trace
                example: post
              operation_id:
                type: string
                nullable: true
                example: addPet
              tags:
                type: array
                items:
                  type: string
                  example: pet
              summary:
                type: string
                nullable: true
                example: Add a new Pet to the store
              deprecated:
                type: boolean
    ApiTypeEnum:
      type: string
      enum:
        - openapi
    ProductDocument:
      type: object
      title: Document
      description: a document
      required:
        - id
        - slug
        - title
        - content
      properties:
        id:
          type: string
          format: uuid
          description: the id of the document
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        parent_document_id:
          type: string
          format: uuid
          description: the id of the parent document
          nullable: true
          example: dd4e1b98-3629-4dd3-acc0-759a726ffee2
        slug:
          type: string
          description: the slug of the document
          example: getting-started
        content:
          $ref: '#/components/schemas/DocumentBlock'
        title:
          type: string
          description: the title of the document
          example: Hello World
    DocumentContentTypeEnum:
      type: string
      default: application/json
      enum:
        - application/json
        - application/konnect.document-tree+json
    ListDocumentsItem:
      type: object
      title: Document item
      required:
        - id
        - parent_document_id
        - slug
        - title
      properties:
        id:
          type: string
          format: uuid
          description: the id of the document
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        parent_document_id:
          type: string
          format: uuid
          description: the id of the parent document
          nullable: true
          example: dd4e1b98-3629-4dd3-acc0-759a726ffee2
        slug:
          type: string
          description: the slug of the document
          example: getting-started
        title:
          type: string
          description: the title of the document
          example: Getting Started
    GetManyDocuments:
      type: object
      required:
        - meta
        - data
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ListDocumentsItem'
    DocumentTree:
      type: object
      title: DocumentTree
      description: a document tree
      required:
        - id
        - title
        - slug
        - meta
        - children
      properties:
        id:
          type: string
          format: uuid
          example: d32d905a-ed33-46a3-a093-d8f536af9a8a
        parent_document_id:
          type: string
          format: uuid
          nullable: true
          example: dd4e1b98-3629-4dd3-acc0-759a726ffee2
        title:
          type: string
          description: the title of the document
          example: Getting Started
        slug:
          type: string
          description: the slug of the document
          example: getting-started
        meta:
          type: object
          description: the metadata of the document
          example:
            author: Jane Doe
            description: This is a description
            keywords: hello, world
        children:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTree'
    GetManyDocumentTrees:
      type: object
      required:
        - meta
        - data
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTree'
    BaseNode:
      type: object
      required:
        - type
      properties:
        type:
          type: string
    DocumentBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - type: object
          properties:
            version:
              type: string
      description: content of the document
      example:
        type: doc
        content:
          - type: paragraph
            content:
              - type: text
                text: Hello World
    BlockNode:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
        - type: object
          properties:
            children:
              description: List of children nodes of the current node
              type: array
              items:
                $ref: '#/components/schemas/AnyNode'
    HeadingBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - type: object
          properties:
            level:
              description: Level of the heading which maps to HTML <h> tag
              type: number
              minimum: 1
              maximum: 6
    BlockQuoteBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
    ParagraphBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
    TextBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
    BreakBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
    CodeBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - type: object
          properties:
            lang:
              type: string
    ListBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - type: object
          properties:
            isOrdered:
              description: Defines if the list is ordered or not
              type: boolean
    ListItemBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
    Text:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
        - $ref: '#/components/schemas/BlockNode'
        - type: object
          properties:
            text:
              type: string
            hardBreak:
              description: >
                If this property is true the end of this block should

                be a carriage return and not concatenated to the next Text
                block.
              type: boolean
            softBreak:
              description: >
                If this property is true the end of this block should should be

                concatenated with a space caracter before the next block. This
                is

                the flag showing that the parsed markdown block was at the end
                of

                the line.
              type: boolean
    Emphasis:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
        - $ref: '#/components/schemas/BlockNode'
        - type: object
          properties:
            level:
              type: number
              minimum: 1
              maximum: 2
              description: |
                Level of emphasis
                1 - italic
                2 - bold
    Code:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
        - $ref: '#/components/schemas/BlockNode'
    Link:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
        - type: object
          properties:
            href:
              description: Target url of the link
              type: string
            title:
              description: Title of the link
              type: string
    Image:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
        - type: object
          properties:
            url:
              description: Url of the image
              type: string
            alt:
              description: Alternate tag of the image
              type: string
            title:
              description: Title of the image
              type: string
    StrikeThrough:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
    TaskCheckbox:
      allOf:
        - $ref: '#/components/schemas/BaseNode'
        - type: object
          properties:
            checked:
              type: boolean
              description: State of the checkbox
          required:
            - checked
    AlignmentKind:
      type: string
      enum:
        - left
        - right
        - center
        - none
    TableAlignments:
      type: object
      properties:
        alignments:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AlignmentKind'
      required:
        - alignments
    TableBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - $ref: '#/components/schemas/TableAlignments'
    TableHeaderBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - $ref: '#/components/schemas/TableAlignments'
    TableCellBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - type: object
          properties:
            alignment:
              $ref: '#/components/schemas/AlignmentKind'
    TableRowBlock:
      allOf:
        - $ref: '#/components/schemas/BlockNode'
        - $ref: '#/components/schemas/TableAlignments'
    AnyNode:
      oneOf:
        - $ref: '#/components/schemas/DocumentBlock'
        - $ref: '#/components/schemas/HeadingBlock'
        - $ref: '#/components/schemas/BlockQuoteBlock'
        - $ref: '#/components/schemas/ParagraphBlock'
        - $ref: '#/components/schemas/TextBlock'
        - $ref: '#/components/schemas/BreakBlock'
        - $ref: '#/components/schemas/CodeBlock'
        - $ref: '#/components/schemas/ListBlock'
        - $ref: '#/components/schemas/ListItemBlock'
        - $ref: '#/components/schemas/Text'
        - $ref: '#/components/schemas/Emphasis'
        - $ref: '#/components/schemas/Code'
        - $ref: '#/components/schemas/Link'
        - $ref: '#/components/schemas/Image'
        - $ref: '#/components/schemas/StrikeThrough'
        - $ref: '#/components/schemas/TableBlock'
        - $ref: '#/components/schemas/TableHeaderBlock'
        - $ref: '#/components/schemas/TableCellBlock'
        - $ref: '#/components/schemas/TableRowBlock'
        - $ref: '#/components/schemas/TaskCheckbox'
      discriminator:
        propertyName: type
        mapping:
          document: '#/components/schemas/DocumentBlock'
          heading: '#/components/schemas/HeadingBlock'
          blockquote: '#/components/schemas/BlockQuoteBlock'
          paragraph: '#/components/schemas/ParagraphBlock'
          text_block: '#/components/schemas/TextBlock'
          break: '#/components/schemas/BreakBlock'
          code_block: '#/components/schemas/CodeBlock'
          list: '#/components/schemas/ListBlock'
          list_item: '#/components/schemas/ListItemBlock'
          text: '#/components/schemas/Text'
          emphasis: '#/components/schemas/Emphasis'
          code: '#/components/schemas/Code'
          link: '#/components/schemas/Link'
          image: '#/components/schemas/Image'
          strikethrough: '#/components/schemas/StrikeThrough'
          task_checkbox: '#/components/schemas/TaskCheckbox'
          table: '#/components/schemas/TableBlock'
          table_header: '#/components/schemas/TableHeaderBlock'
          table_cell: '#/components/schemas/TableCellBlock'
          table_row: '#/components/schemas/TableRowBlock'
    CreateRegistrationPayload:
      additionalProperties: false
      type: object
      title: CreateRegistrationPayload
      description: an application registration payload
      required:
        - product_version_id
      properties:
        product_version_id:
          description: The UUID of the product version to register for
          type: string
          format: uuid
    GetManyRegistrationsResponse:
      additionalProperties: false
      type: object
      required:
        - data
        - meta
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetRegistrationResponse'
    GetRegistrationResponse:
      additionalProperties: false
      type: object
      required:
        - id
        - status
        - application_id
        - product_id
        - product_name
        - product_version_id
        - product_version_name
        - created_at
        - updated_at
      properties:
        id:
          description: The UUID of the registration
          type: string
          format: uuid
        status:
          description: The approval status of the registration
          type: string
          enum:
            - approved
            - pending
            - rejected
            - revoked
        product_id:
          description: The UUID of the product registered for
          type: string
          format: uuid
        product_name:
          description: The name of the product registered for
          type: string
        product_version_id:
          description: The UUID of the product version registered for
          type: string
          format: uuid
        product_version_name:
          description: The name of the product version registered for
          type: string
        application_id:
          description: The UUID of the application the registration is linked to
          type: string
          format: uuid
        created_at:
          description: ISO timestamp the registration record was created
          type: string
          format: date-time
        updated_at:
          description: ISO timestamp the registration record was last updated
          type: string
          format: date-time
    SearchResults:
      title: SearchResults
      type: object
      required:
        - data
        - meta
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          description: The paginated results that matched the search query
          items:
            type: object
            additionalProperties: false
            properties:
              index:
                $ref: '#/components/schemas/SearchIndicesParameters'
              source:
                $ref: '#/components/schemas/ProductCatalogIndexSource'
            required:
              - index
              - source
    ProductCatalogIndexSource:
      title: ProductCatalogIndexSource
      type: object
      additionalProperties: false
      required:
        - id
        - created_at
        - updated_at
        - name
        - has_documentation
      properties:
        id:
          type: string
          format: uuid
          example: 4f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          description: The entity ID.
          readOnly: true
        name:
          type: string
          example: Nice Product
          description: the name of the product
          nullable: true
          readOnly: true
        description:
          type: string
          example: A nice product for customers to read about and consume
          description: a description of the product
          readOnly: true
        has_documentation:
          type: boolean
          example: true
          description: whether the product has documents associated with it
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An ISO-8601 timestamp representation of entity creation date.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An ISO-8601 timestamp representation of entity update date.
          readOnly: true
        versions:
          type: array
          items:
            additionalProperties: false
            type: object
            required:
              - id
              - created_at
              - updated_at
              - version
              - deprecated
            properties:
              id:
                type: string
                format: uuid
                example: 5f9fd312-a987-4628-b4c5-bb4f4fddd5f7
                description: the entity id
                readOnly: true
              created_at:
                type: string
                format: date-time
                example: '2022-11-04T20:10:06.927Z'
                description: An ISO-8601 timestamp representation of entity creation date.
                readOnly: true
              updated_at:
                type: string
                format: date-time
                example: '2022-11-04T20:10:06.927Z'
                description: An ISO-8601 timestamp representation of entity update date.
                readOnly: true
              version:
                type: string
                example: v2.0.0
                description: the name of the version
                readOnly: true
              deprecated:
                type: boolean
                example: true
                readOnly: true
    SearchIndicesParameters:
      title: SearchIndicesParameters
      type: string
      enum:
        - product-catalog
    SearchQueryParameters:
      title: SearchQueryParameters
      type: string
    SearchJoinParameters:
      title: SearchJoinParameters
      type: string
      description: >-
        Accepted values are `versions` and `versions.documents`. Use commas to
        separate multiple values.
      example: versions,versions.documents
  examples:
    Authenticate-Request:
      value:
        username: developer@example.com
        password: <!N0taP@$$w0rd!>
    Reset-Password-Request:
      value:
        password: <!D3finitelyN0taP@$$w0rd!>
        token: c8efd006-d8e1-4743-b91b-f163b9eae06a
    Verify-Email-Request:
      value:
        token: c8efd006-d8e1-4743-b91b-f163b9eae06a
    Verify-Email-Response:
      value:
        email: developer@example.com
        token: c8efd006-d8e1-4743-b91b-f163b9eae06a
    400-Invalid-Token:
      value:
        status: 400
        title: Bad Request
        instance: konnect:trace:8988732526256293040
        detail: The provided token is invalid
        invalid_parameters:
          - field: token
            reason: invalid ID format
    404-Token-Not-Found:
      value:
        status: 400
        title: Not Found
        instance: konnect:trace:8988732526256293040
        detail: The provided token was not found
    410-Expired-Token:
      value:
        status: 410
        title: Gone
        instance: konnect:trace:8988732526256293040
        detail: The token has expired
    SearchResponseExample:
      value:
        data:
          - index: product-catalog
            source:
              created_at: '2023-01-19T17:41:55.896Z'
              updated_at: '2023-01-20T17:41:55.896Z'
              id: e35b0beb-c3f7-4f8f-95f7-cd8ff0ee478e
              name: Great Product
              description: Great products are built with great care
              has_documentation: true
              versions:
                - created_at: '2023-01-19T17:41:55.896Z'
                  updated_at: '2023-01-20T17:41:55.896Z'
                  id: b35b0beb-c3f7-4f8f-95f7-cd8ff0ee478e
                  version: v0
                  deprecated: false
                - created_at: '2022-01-19T17:41:55.896Z'
                  updated_at: '2022-01-19T17:41:55.896Z'
                  id: 455b0beb-c3f7-4f8f-95f7-cd8ff0ee478e
                  version: v1
                  deprecated: false
        meta:
          page:
            number: 1
            size: 1
            total: 4
tags:
  - name: applications
  - name: credentials
  - name: authentication
  - name: developer
    description: Portal Developer API
  - name: portal
    description: Portal API
  - name: products
  - name: versions
  - name: documentation
  - name: registrations
  - name: search
servers:
  - url: https://custom.example.com
    description: Portal API
