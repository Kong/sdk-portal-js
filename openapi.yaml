openapi: 3.0.3
info:
  title: Portal API
  version: 2.0.0
  description: Portal API
  contact:
    name: Kong
    url: https://cloud.konghq.com
paths:
  /api/v2/application-registrations/service-versions/{id}:
    get:
      summary: Application registration Configuration
      description: Returns the application registration configuration of the given service
      operationId: get-application-registration-configuration
      parameters:
        - in: path
          name: id
          required: true
          description: id of the service version
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: application registration configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRegistrationConfiguration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - app-reg
  /api/v2/applications:
    get:
      summary: Get many applications
      description: This endpoint allows the developer to list applications
      operationId: get-many-applications
      parameters:
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/GetManyApplications'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthenticated'
      tags:
        - applications
    post:
      summary: Create Application
      description: This endpoint allows the developer to create an application
      operationId: create-application
      requestBody:
        $ref: '#/components/requestBodies/CreateApplication'
      responses:
        '201':
          $ref: '#/components/responses/ApplicationCreation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - applications
  /api/v2/applications/{applicationId}:
    get:
      summary: Get one Application
      description: This endpoint allows the developer to get an application
      operationId: get-one-application
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      responses:
        '200':
          $ref: '#/components/responses/GetApplication'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - applications
    delete:
      summary: Delete Application
      description: This endpoint allows the developer to delete an application they own
      operationId: delete-application
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      responses:
        '204':
          description: The application has been deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      tags:
        - applications
    put:
      summary: Update Application
      description: This endpoint allows the developer to update an application they own
      operationId: update-application
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        $ref: '#/components/requestBodies/UpdateApplication'
      responses:
        '200':
          $ref: '#/components/responses/ApplicationUpdate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - applications
  /api/v2/applications/{applicationId}/credentials:
    get:
      summary: Get Many credentials
      description: >-
        This endpoint allows the developer to list the credentials for an
        application they own
      operationId: get-many-credentials
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/GetCredentials'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - credentials
    post:
      summary: Post Credential
      description: >-
        This endpoint allows the developer to create a credential for an
        application they own
      operationId: create-credential
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        $ref: '#/components/requestBodies/CreateCredential'
      responses:
        '201':
          $ref: '#/components/responses/CredentialCreation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - credentials
  /api/v2/applications/{applicationId}/credentials/{credentialId}:
    put:
      summary: Update Credential
      description: >-
        This endpoint allows the developer to update a credential for an
        application they own
      operationId: update-credential
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/CredentialId'
      requestBody:
        $ref: '#/components/requestBodies/UpdateCredential'
      responses:
        '200':
          description: credential properly updated
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - credentials
    delete:
      summary: Delete Credential
      description: >-
        This endpoint allows the developer to delete a credential for an
        application they own
      operationId: delete-credential
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/CredentialId'
      responses:
        '204':
          description: credential properly deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - credentials
  /api/v2/applications/{applicationId}/refresh-token:
    post:
      summary: refresh token
      description: >-
        This endpoint allows the developer to reset the client secret for an
        application they own
      operationId: refresh-application-token
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      responses:
        '201':
          $ref: '#/components/responses/RefreshToken'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - applications
        - credentials
  /api/v2/developer:
    post:
      operationId: register
      summary: Register
      description: Register to the developer portal
      requestBody:
        description: Developer registration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPayload'
      responses:
        '201':
          description: the developer has been properly registered.
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - developer
  /api/v2/developer/password-reset:
    post:
      operationId: reset-password
      summary: Password Reset
      description: |
        Starts the password reset flow for the desired account. An email
        will be sent to the email address to initiate the password reset flow.
      requestBody:
        description: Developer registration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordPayload'
      responses:
        '200':
          description: the password reset flow has been initiated.
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - developer
  /api/v2/portal/appearance:
    get:
      operationId: get-portal-appearance
      summary: portal appearance
      description: appearance of the portal
      responses:
        '200':
          $ref: '#/components/responses/RetrievePortalAppearanceResponse'
      tags:
        - portal
  /api/v2/portal/context:
    get:
      operationId: get-portal-context
      summary: get portal context
      description: return the portal context
      responses:
        '200':
          $ref: '#/components/responses/RetrievePortalContextResponse'
      tags:
        - portal
  /api/v2/portal/stylesheet/catalog-cover:
    get:
      operationId: get-portal-catalog-cover
      summary: catalog cover
      description: Cover banner for the developer portal
      responses:
        '200':
          $ref: '#/components/responses/RetrievePortalCoverResponse'
      tags:
        - portal
  /api/v2/portal/stylesheet/logo:
    get:
      operationId: get-portal-logo
      summary: portal logo
      description: Logo of the developer portal
      responses:
        '200':
          $ref: '#/components/responses/RetrievePortalLogoResponse'
      tags:
        - portal
  /api/v2/search/{indices}:
    get:
      summary: Search Portal Entities
      operationId: search-portal-entities
      description: >-
        Returns paginated search results from the specified entities with the
        given search parameters.
      responses:
        '200':
          $ref: '#/components/responses/SearchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthenticated'
      parameters:
        - $ref: '#/components/parameters/Search'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/SearchIndices'
      tags:
        - Search
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ApplicationRegistrationConfiguration:
      type: object
      properties:
        auto_approve:
          type: boolean
        status:
          type: string
          enum:
            - enabled
            - pending
        auth_config:
          type: object
          properties:
            name:
              type: string
              enum:
                - key-auth
                - openid-connect
            config:
              type: object
      required:
        - status
        - auth_config
        - auto_approve
    Error:
      type: object
      title: Error
      description: standard error
      x-examples:
        Example 1:
          status: 404
          title: Not Found
          type: https://kongapi.info/konnect/not-found
          instance: portal:trace:2287285207635123011
          detail: The requested document was not found
      required:
        - status
        - title
        - instance
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 404
        title:
          type: string
          description: The error response code.
          example: Not Found
        type:
          type: string
          description: The error type.
          example: Not Found
        instance:
          type: string
          example: portal:trace:2287285207635123011
          description: The portal traceback code
        invalid_parameters:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: The name of the invalid parameter.
              reason:
                type: string
                description: The reason the parameter is invalid.
              field:
                type: string
                description: The field that caused the error.
                example: name
              rule:
                type: string
                description: The rule that caused the error.
                example: required
          description: An array of invalid parameters.
        detail:
          type: string
          example: The requested team was not found
          description: Details about the error.
    PaginatedMeta:
      type: object
      additionalProperties: false
      title: PaginatedMeta
      description: Returns pagination information
      properties:
        page:
          type: object
          description: >-
            Contains pagination query parameters and the total number of objects
            returned.
          properties:
            number:
              type: integer
              example: 2
              description: Specifies the number of objects returned per page.
            size:
              type: integer
              example: 10
              maximum: 100
              description: Specifies the size of the page.
            total:
              type: integer
              example: 100
              description: Integer representation of the amount of items returned.
    PageParameters:
      additionalProperties: false
      title: PageParameters
      type: object
      properties:
        size:
          type: integer
          example: 10
        number:
          type: integer
          example: 2
    CreateCredentialPayload:
      additionalProperties: false
      type: object
      properties:
        display_name:
          type: string
          maxLength: 255
    UpdateCredentialPayload:
      additionalProperties: false
      type: object
      required:
        - display_name
      properties:
        display_name:
          type: string
          maxLength: 255
    GetManyApplicationsResponse:
      additionalProperties: false
      type: object
      required:
        - data
        - meta
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetApplicationResponse'
    GetApplicationResponse:
      additionalProperties: false
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        reference_id:
          type: string
        description:
          type: string
        redirect_uri:
          type: string
        is_dcr:
          type: boolean
      required:
        - id
        - name
        - reference_id
        - description
        - is_dcr
    GetCredentialsResponse:
      additionalProperties: false
      type: object
      required:
        - data
        - meta
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              display_name:
                type: string
            required:
              - id
              - display_name
    CredentialCreationResponse:
      additionalProperties: false
      type: object
      properties:
        credential:
          type: string
        id:
          type: string
        display_name:
          type: string
      required:
        - credential
        - id
        - display_name
    RefreshTokenResponse:
      additionalProperties: false
      type: object
      title: Refresh token response
      description: Refresh token response
      required:
        - client_id
        - client_secret
      properties:
        client_id:
          type: string
        client_secret:
          type: string
    CreateApplicationPayload:
      additionalProperties: false
      type: object
      title: CreateApplicationPayload
      description: an application payload
      required:
        - name
        - reference_id
      properties:
        name:
          type: string
          maxLength: 255
        reference_id:
          type: string
          maxLength: 255
        redirect_uri:
          type: string
          format: uri
        description:
          type: string
          maxLength: 255
    ApplicationCreationResponse:
      additionalProperties: false
      type: object
      title: ApplicationCreationResponse
      description: Application creation response payload
      required:
        - name
        - reference_id
        - description
        - is_dcr
      properties:
        name:
          type: string
        reference_id:
          type: string
        description:
          type: string
        redirect_uri:
          type: string
        is_dcr:
          type: boolean
        credentials:
          type: object
          required:
            - client_id
            - client_secret
          properties:
            client_id:
              type: string
            client_secret:
              type: string
    UpdateApplicationPayload:
      additionalProperties: false
      type: object
      title: UpdateApplicationPayload
      description: Payload required to update an application
      properties:
        name:
          type: string
        reference_id:
          type: string
        description:
          type: string
        redirect_uri:
          type: string
    ApplicationUpdateResponse:
      additionalProperties: false
      type: object
      title: ApplicationUpdateResponse
      description: Application update response payload
      required:
        - name
        - reference_id
        - description
        - is_dcr
      properties:
        name:
          type: string
        reference_id:
          type: string
        description:
          type: string
        redirect_uri:
          type: string
        is_dcr:
          type: boolean
    RegisterPayload:
      title: register payload
      description: |
        Payload required to be sent to register a developer to the
        portal.
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
          format: email
          example: developer@konghq.com
        full_name:
          type: string
          minLength: 1
          maxLength: 256
          example: Jane Doe
      required:
        - full_name
        - email
    ResetPasswordPayload:
      title: reset password payload
      description: |
        Payload required to start the reset password flow
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
          format: email
          example: developer@konghq.com
      required:
        - email
    PortalAppearance:
      title: Portal Appearance
      description: the portal appearance
      type: object
      additionalProperties: false
      properties:
        variables:
          type: object
          properties:
            catalog:
              type: object
              properties:
                logo:
                  type: object
                  properties:
                    url:
                      type: string
                cover:
                  type: object
                  properties:
                    url:
                      type: string
                primary_header:
                  type: object
                  properties:
                    text:
                      type: string
                welcome_message:
                  type: object
                  properties:
                    text:
                      type: string
        stylesheets:
          type: object
          properties:
            global:
              type: object
              properties:
                main:
                  type: object
                  properties:
                    data:
                      type: object
    PortalContext:
      title: Portal Context
      description: describe the portal execution context
      type: object
      additionalProperties: false
      properties:
        portal_id:
          type: string
        org_id:
          type: string
        featureset_id:
          type: string
        basic_auth_enabled:
          type: boolean
        is_public:
          type: boolean
        rbac_enabled:
          type: boolean
          description: Is the portal protected with role base access
        is_dcr:
          type: boolean
          description: Is the portal using DCR application registration
        oidc_auth_enabled:
          type: boolean
      required:
        - portal_id
        - org_id
        - is_public
        - featureset_id
        - basic_auth_enabled
        - rbac_enabled
        - is_dcr
        - oidc_auth_enabled
    SearchResults:
      title: SearchResults
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: array
          description: The paginated data items that matched the search query
          items:
            type: object
            additionalProperties: false
            properties:
              index:
                $ref: '#/components/schemas/SearchIndicesParameters'
              source:
                $ref: '#/components/schemas/ServiceCatalogIndexSource'
            required:
              - index
              - source
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
    ServiceCatalogIndexSource:
      title: ServiceCatalogIndexSource
      type: object
      required:
        - id
        - created_at
        - updated_at
        - name
      properties:
        id:
          type: string
          format: uuid
          example: 4f9fd312-a987-4628-b4c5-bb4f4fddd5f7
          description: The entity ID.
          readOnly: true
        name:
          type: string
          example: Test Service
          description: the name of the service
          readOnly: true
        display_name:
          type: string
          example: Test Service
          description: the name of the service
          readOnly: true
        description:
          type: string
          example: Test Service
          description: the name of the service
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An ISO-8604 timestamp representation of entity creation date.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2022-11-04T20:10:06.927Z'
          description: An ISO-8604 timestamp representation of entity update date.
          readOnly: true
        versions:
          type: array
          items:
            type: object
            required:
              - id
              - created_at
              - updated_at
              - version
              - publish_status
              - deprecated
              - tracking_id
            properties:
              id:
                type: string
                format: uuid
                example: 5f9fd312-a987-4628-b4c5-bb4f4fddd5f7
                description: The entity ID.
                readOnly: true
              created_at:
                type: string
                format: date-time
                example: '2022-11-04T20:10:06.927Z'
                description: An ISO-8604 timestamp representation of entity creation date.
                readOnly: true
              updated_at:
                type: string
                format: date-time
                example: '2022-11-04T20:10:06.927Z'
                description: An ISO-8604 timestamp representation of entity update date.
                readOnly: true
              version:
                type: string
                example: Test Service
                description: the name of the service
              publish_status:
                type: string
                enum:
                  - published
                  - unpublished
                example: published
                readOnly: true
              deprecated:
                type: boolean
                example: true
                readOnly: true
              tracking_id:
                type: string
                format: uuid
                example: 4f9fd312-a987-4628-b4c5-bb4f4fddd5f7
                description: The entity ID.
                readOnly: true
    SearchIndicesParameters:
      title: SearchIndicesParameters
      type: string
      enum:
        - service-catalog
    SearchParameters:
      title: SearchParameters
      type: object
      properties:
        q:
          type: string
        join:
          type: string
          enum:
            - documents
            - versions
            - versions.documents
          example: versions.documents
  responses:
    Unauthenticated:
      description: Unauthenticated
      content:
        application/problem+json:
          schema:
            title: UnauthenticatedError
            type: object
            description: The error response object.
            properties:
              type:
                type: string
                description: The type of error.
                example: unauthenticated
              status:
                type: integer
                example: 401
                description: The HTTP status code.
                enum:
                  - 401
              title:
                type: string
                description: The Error Response.
                example: Unauthenticated
              instance:
                type: string
                description: The Konnect traceback code.
                example: konnect:trace:952172606039454040
              detail:
                type: string
                description: Details about the error response.
                example: A valid session is required
            required:
              - status
              - title
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            title: BadRequestError
            type: object
            description: The error object
            properties:
              status:
                type: integer
                description: The HTTP response code
                example: 400
                enum:
                  - 400
              title:
                type: string
                example: Bad Request
                description: The Error response
              instance:
                type: string
                description: The Konnect traceback ID.
                example: konnect:trace:3674017986744198214
              detail:
                type: string
                description: Information about the error response.
                example: Validation
              invalid_parameters:
                type: array
                description: >-
                  An array of objects that contains information related to the
                  error response.
                items:
                  type: object
                  additionalProperties: true
                  properties:
                    rule:
                      type: string
                    field:
                      type: string
                    reason:
                      type: string
                required:
                  - field
                  - reason
            required:
              - status
              - title
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            title: NotFoundError
            type: object
            description: The error object
            properties:
              type:
                type: string
                description: The error type.
              status:
                type: integer
                description: The HTTP response code
                example: 404
                enum:
                  - 404
              title:
                type: string
                example: Not Found
                description: The Error response
              instance:
                type: string
                description: The Konnect traceback ID.
                example: konnect:trace:3674017986744198214
                required:
                  - field
                  - reason
            required:
              - status
              - title
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
            title: InternalServerError
            type: object
            description: The error response object.
            properties:
              status:
                type: integer
                description: The HTTP status code.
                example: 500
                enum:
                  - 500
              title:
                type: string
                description: The error response code.
                example: Internal Server Error
              instance:
                type: string
                example: konnect:trace:2287285207635123011
                description: The Konnect traceback code
              details:
                type: string
                description: Details about the error.
            required:
              - status
              - title
    GetManyApplications:
      description: Get applications response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetManyApplicationsResponse'
    GetApplication:
      description: Get application response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetApplicationResponse'
    RefreshToken:
      description: Refresh token response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefreshTokenResponse'
    GetCredentials:
      description: Get credentials response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCredentialsResponse'
    CredentialCreation:
      description: Credential Creation success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CredentialCreationResponse'
    ApplicationCreation:
      description: Application Creation success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationCreationResponse'
    ApplicationUpdate:
      description: Application Update success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationUpdateResponse'
    Conflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    TooManyRequests:
      description: Too Many Requests
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    RetrievePortalLogoResponse:
      description: Logo of the portal. Can be either png or jpg
      content:
        image/png:
          schema:
            type: string
            format: binary
        image/jpg:
          schema:
            type: string
            format: binary
    RetrievePortalCoverResponse:
      description: Cover of the portal. Can be either png or jpg
      content:
        image/png:
          schema:
            type: string
            format: binary
        image/jpg:
          schema:
            type: string
            format: binary
    RetrievePortalAppearanceResponse:
      description: portal appearance
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalAppearance'
    RetrievePortalContextResponse:
      description: portal context
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PortalContext'
    SearchResponse:
      description: Search Results
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchResults'
          examples:
            Search Response Example:
              $ref: '#/components/examples/SearchResponseExample'
  parameters:
    ApplicationId:
      name: applicationId
      in: path
      required: true
      description: Id of the targeted application
      schema:
        type: string
        format: uuid
    CredentialId:
      name: credentialId
      in: path
      required: true
      description: Id of the targeted credential
      schema:
        type: string
        format: uuid
    Page:
      name: page
      description: Determines which page of search results to retrieve.
      required: false
      in: query
      schema:
        $ref: '#/components/schemas/PageParameters'
    Search:
      name: search
      description: Determines how to filter search results
      required: false
      in: query
      schema:
        $ref: '#/components/schemas/SearchParameters'
    SearchIndices:
      name: indices
      description: Determines which entity sets to search
      required: true
      in: path
      schema:
        $ref: '#/components/schemas/SearchIndicesParameters'
  requestBodies:
    CreateApplication:
      description: Create an application
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateApplicationPayload'
    UpdateApplication:
      description: Update an application
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateApplicationPayload'
    CreateCredential:
      description: Create a credential
      required: false
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCredentialPayload'
    UpdateCredential:
      description: Update a credential
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCredentialPayload'
  examples:
    SearchResponseExample:
      value:
        data:
          - index: service-catalog
            source:
              created_at: '2023-01-19T17:41:55.896Z'
              updated_at: '2023-01-19T17:41:55.896Z'
              id: e35b0beb-c3f7-4f8f-95f7-cd8ff0ee478e
              name: test service
              display_name: Test Service
              description: Test Service Description
              labels: {}
              versions:
                - created_at: '2023-01-19T17:41:55.896Z'
                  updated_at: '2023-01-19T17:41:55.896Z'
                  id: b35b0beb-c3f7-4f8f-95f7-cd8ff0ee478e
                  version: v0
                  publish_status: published
                  deprecated: false
                  tracking_id: c45b0beb-c3f7-4f8f-95f7-cd8ff0ee478e
                - created_at: '2022-01-19T17:41:55.896Z'
                  updated_at: '2022-01-19T17:41:55.896Z'
                  id: 455b0beb-c3f7-4f8f-95f7-cd8ff0ee478e
                  version: v1
                  publish_status: unpublished
                  deprecated: false
                  tracking_id: 885b0beb-c3f7-4f8f-95f7-cd8ff0ee478e
        meta:
          page:
            number: 2
            size: 1
            total: 4
security:
  - accessToken: []
tags:
  - name: app-reg
    description: Application Registration
  - name: applications
  - name: credentials
  - name: developer
    description: Portal Developer API
  - name: portal
    description: Portal API
  - name: Search
    description: Endpoints for searching across portal entities
servers:
  - url: https://custom.example.com/api
    description: Portal API
